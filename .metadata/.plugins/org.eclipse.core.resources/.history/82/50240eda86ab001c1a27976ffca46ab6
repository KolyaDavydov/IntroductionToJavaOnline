package algorithmization_2.arraysOfArrays;

import java.util.Arrays;

//12. Отсортировать строки матрицы по возрастанию и убыванию значений элементов.

public class Task12 {

  public static void main(String[] args) {
      int n = 6;
      int m = 5;
      int[][] matrix = new int[n][m];

      for (int i = 0; i < matrix.length; i++) {
          for (int j = 0; j < matrix[i].length; j++) {
              matrix[i][j] = (int) (Math.random() * 10);
          }
      }

      for(int i = 0; i < matrix.length; i++) {
			System.out.println(Arrays.toString(matrix[i]));
		}


      for (int i = 0; i < matrix.length; i++) {
          Arrays.sort(matrix[i]);
      }

      System.out.println();
      for(int i = 0; i < matrix.length; i++) {
			System.out.println(Arrays.toString(matrix[i]));
		}

      for(int i = 0; i < matrix.length; i++) {
          int forSort;
          boolean checkSort = false;
          while (checkSort == false) {
              for (int j = 1; j < matrix[i].length; j++) {
                  if (matrix[i][j] > matrix[i][j - 1]) {
                      forSort = matrix[i][j];
                      matrix[i][j] = matrix[i][j - 1];
                      matrix[i][j - 1] = forSort;
                  }
              }
              for (int j = 1; j < matrix[i].length; j++) {
                  if (matrix[i][j] <= matrix[i][j - 1]) {
                      checkSort = true;
                  } else {
                      checkSort = false;
                      break;
                  }
              }
          }
      }
      System.out.println();
      for(int i = 0; i < matrix.length; i++) {
			System.out.println(Arrays.toString(matrix[i]));
		}

  }
}
